package errors

import "playcards/utils/errors"

var (
	ErrClubNotExisted        = errors.NotFound(14001, "俱乐部不存在！")
	ErrAlreadyInClub         = errors.Conflict(14002, "已有俱乐部，不能重复加入！")
	ErrStatusNoINNormal      = errors.NotFound(14003, "俱乐部不在活动状态，不能操作！")
	ErrClubMemberLimit       = errors.NotFound(14004, "该俱乐部已满！")
	ErrInBlackList           = errors.NotFound(14005, "在该俱乐部的黑名单中，不能加入！")
	ErrNotJoinAnyClub        = errors.Conflict(14006, "未加入任何俱乐部！")
	ErrNotInClub             = errors.Conflict(14007, "未加入这个俱乐部！")
	ErrClubNameLen           = errors.Forbidden(14008, "俱乐部名称必须在1到20个汉字或3到60字母之间！")
	ErrCreatorid             = errors.Forbidden(14009, "创建人ID和代理人ID不能为空！")
	ErrExistedInClub         = errors.Conflict(14010, "已加入这个俱乐部！")
	ErrClubRecharge          = errors.Conflict(14011, "金额不能小于零！")
	ErrClubConsume           = errors.Conflict(14012, "消费金额不能为正数！")
	ErrClubCoinNotEnough     = errors.Conflict(14013, "奖杯不足！")
	ErrNotCreatorID          = errors.Conflict(14014, "您没有权限执行此操作！")
	ErrClubCoinNegative      = errors.Conflict(14015, "奖杯不为零，清零之前不能退出俱乐部！")
	ErrStatus                = errors.Conflict(14016, "非法的状态值！")
	ErrAlreadyHasProxyID     = errors.Conflict(14017, "用户已经是代理，不能再更改代理信息！")
	ErrCreateClubLimit       = errors.NotFound(14018, "创建俱乐部已达上限！")
	ErrCreateVipRoomLimit    = errors.NotFound(14019, "创建俱乐部包厢已达上限！")
	ErrRoomMaxRound          = errors.Forbidden(14020, "房间轮数不正确！")
	ErrGameParam             = errors.Forbidden(14021, "房间参数不正确！")
	ErrRoomMaxNumber         = errors.Forbidden(14022, "房间人数不正确！")
	ErrNameLen               = errors.Forbidden(14023, "名称不能为空！")
	ErrVipRoomSettingNoFind  = errors.Conflict(14024, "未找到包厢配置！")
	ErrMemberClubCoinNonZero = errors.Conflict(14025, "有用户奖杯不为零，不能解散俱乐部！")
	ErrClubIDZero            = errors.Conflict(14026, "俱乐部ID不能为零！")
	ErrIDZero                = errors.Conflict(14027, "ID不能为零！")
	ErrMemberInRoom          = errors.Conflict(14028, "该成员在游戏中，不能踢出！")
	ErrClubHasGame           = errors.Conflict(14029, "有未结束游戏，不能解散俱乐部！")
	ErrUpdateClubNull           = errors.Conflict(14030, "修改内容不能为空！")
)
