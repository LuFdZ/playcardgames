syntax = "proto3";


package room;

message Room {
    int32 RoomID = 1;
    string Password = 2;
    repeated RoomUser UserList  =3;
    int32 MaxNumber  =4;
    int32 RoundNumber  =5;
    int32 RoundNow  =6;
    int32 Status    =7;
    int32 GameType  =8;
    string GameParam = 9;
    int64 CreatedAt =10;
    int64 UpdatedAt =11;
}

message RoomUser{
    int32 UserID = 1;
    int32 Ready = 2;
    int32 Position = 3;
    string Icon =4;
    int32 Sex =5;
    int32 Role =6;
    string Nickname = 7;
    int32 RoomID = 8;
    int32 Destroy = 9;
}

message Position {
    int32 RoomID = 1;
    int32 UserID = 2;
    int32 Index = 3;
    bool Ready = 4;
}

message RoomEvent {
    int32 UserID = 1;
    int32 RoomID = 2;
    int32 Type = 3;
    string Data = 4;
}

message GameUserResult {
    int32 UserID =1;
    int32 Win    =2;
    int32 Lost   =3;
    int32 Tie    =4;
    int32 Score  =5;
}

message RoomResults {
    int32 RoomID = 1;
    int32 RoundNumber = 2;
    int32 RoundNow = 3;
    int32 Status = 4;
    repeated GameUserResult List = 5;
}

message GiveUpGameRequest {
    string Password = 1;
    int32 AgreeOrNot = 2;
}

message GiveUpGameResult {
    int32 Total = 1;
    int32 Agree =2;
    int32 DisAgree = 3;
    int32 Wairting = 4;
    int32 Status = 5;// 1投票进行中 2游戏继续 3游戏解散
    int32 RoomID =6;
}

message Shock {
    int32 RoomID = 1;
    int32 UserIDFrom = 2;
    int32 UserIDTo = 3;
}

message Dropped {
    int32 UserID = 1;
}

message HeartbeatRequest {
    
}

service RoomSrv {
    rpc CreateRoom(Room) returns (Room) {}
    rpc EnterRoom(Room) returns (Room) {}
    rpc LeaveRoom(Room) returns (RoomUser) {}
    rpc SetReady(Room) returns (RoomUser) {}
    rpc OutReady(Room) returns (RoomUser) {}
    rpc Heartbeat(Room) returns (Room) {}
    rpc TestClean(Room) returns (Room) {}
    rpc GiveUpGame(GiveUpGameRequest) returns (GiveUpGameResult) {}
    rpc Shock(RoomUser) returns (RoomUser) {}
}

